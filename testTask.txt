1. Imagine that we want to make a data aggregator that will take real estate listings from a large site (for example, flatfy.ua) but only show matches who are currently have confirmed covid-19 cases in same location (filtered by street name) using following data source https://covid19.gov.ua/csv/data.csv. To do this, you are invited to build a prototype system that will regularly update the stream from flatfy

 REST API (```curl 'https://flatfy.ua/api/v2/search/results_for_listing_with_map' --data-binary '{"searchParams":{"city":"115","contractType":"1","realtyType":"1", "page":1},"language":"uk"}' 
-H 'content-type: application/json;charset=UTF-8 
application/json' | grep priceSqm```

- if you have other preferences in the real estate listings world - you can choose another source of the same size) and return the top 10 matching listings in ascending order by priceSqm. The system should thus maintain an up-to-date data mart, from which you can take listings for display to the user at any time, data should be refetched every 1 hour or faster (depending on throughput). Data should be limited only to Odessa city.

 most important is to parse and join data to find extract the required results as mentioned in the task description.

2. The prototype must be provided in the form of source codes and launch instructions. Ideally, the system will run in the format of docker-containers.

3. You do not need to do a complex text analysis when searching for matches of the text of news and trends - it will be enough to clear the text from special characters and bring it to lower case.

4. You do not need to make a UI to view the news / system management - a brief description of how to see the showcase of relevant ("matched cases") listings will suffice. For each showed listing there will be enough a name, priceSqm, location, links to the source, dates of publication of the listing and case count.

5. It is allowed to use any Scala related technological stack - Scala, Akka, Spark, etc.

6. Code should be put on github repo.

